W = WeylGroup("A3",prefix="s")
[s0,s1,s2] = W.simple_reflections()
w0 = W.long_element(); w0
e = s0*s0
e_w0 = W.bruhat_interval(e,w0); e_w0

#for i in (e_w0):
#    print "These are reduced expressions for ", i , " : ", i.reduced_words() 
###the above gives all reduced words for elements in S_4


R1 = PolynomialRing(ZZ,'y',4)
F1 = FractionField(R1)
R2 = PolynomialRing(F1,'x',4)
F2 = FractionField(R2)
##Inject the variables so can use names
R1.injvar()
R2.injvar()
PP = PositiveIntegers() ##The positive integers
schur = SymmetricFunctions(ZZ).s() ##Define the ring of symmetric functions L
I =R2.ideal([R2(schur([n]).expand(4,alphabet='x'))-R2(schur([n]).expand(4,alphabet='y')) for n in range(1,5)])
S = R2.quotient(I)

##cohomology
var('a,b')
def oplus(a,b):
    return a + b
z00 = oplus(x0,-y0)
z01 = oplus(x0,-y1)
z02 = oplus(x0,-y2)
z03 = oplus(x0,y3/(y3-1))
z10 = oplus(x1,-y0)
z11 = oplus(x1,-y1)
z12 = oplus(x1,-y2)
z13 = oplus(x1,y3/(y3-1))
z20 = oplus(x2,-y0)
z21 = oplus(x2,-y1)
z22 = oplus(x2,-y2)
z23 = oplus(x2,-y3)
z30 = oplus(x3,-y0)
z31 = oplus(x1,-y1)
u01 = oplus(x0,-x1)
u10 = oplus(x1,-x0)
u12 = oplus(x1,-x2)
u21 = oplus(x2,-x1)
u23 = oplus(x2,-x3)
u32 = oplus(x3,-x2)


Pempty = x0^3*x1^2*x2 - x0^2*x1*y0^3 + (x0^3*x1 + x0^2*x1^2 + x0^2*x1*x2)*y0^2 + (x0^2*x1*x2 - x0*y0^3 + (x0^2 + x0*x1 + x0*x2)*y0^2 - (x0^2*x1 + (x0^2 + x0*x1)*x2)*y0)*y1^2 - (x0^3*x1^2 + (x0^3*x1 + x0^2*x1^2)*x2)*y0 + ((x0^2 + x0*x1)*y0^3 - (x0^3 + 2*x0^2*x1 + x0*x1^2 + (x0^2 + x0*x1)*x2)*y0^2 - (x0^3*x1 + x0^2*x1^2)*x2 + (x0^3*x1 + x0^2*x1^2 + (x0^3 + 2*x0^2*x1 + x0*x1^2)*x2)*y0)*y1 - (x0^2*x1^2*x2 - x0*x1*y0^3 + (x0^2*x1 + x0*x1^2 + x0*x1*x2)*y0^2 + ((x0 + x1 + x2)*y0^2 + x0*x1*x2 - y0^3 - ((x0 + x1)*x2 + x0*x1)*y0)*y1^2 - (x0^2*x1^2 + (x0^2*x1 + x0*x1^2)*x2)*y0 + ((x0 + x1)*y0^3 - ((x0 + x1)*x2 + x0^2 + 2*x0*x1 + x1^2)*y0^2 - (x0^2*x1 + x0*x1^2)*x2 + (x0^2*x1 + x0*x1^2 + (x0^2 + 2*x0*x1 + x1^2)*x2)*y0)*y1)*y2

T1Pempty = x1^3*x0^2*x2 - x1^2*x0*y0^3 + (x1^3*x0 + x1^2*x0^2 + x1^2*x0*x2)*y0^2 + (x1^2*x0*x2 - x1*y0^3 + (x1^2 + x1*x0 + x1*x2)*y0^2 - (x1^2*x0 + (x1^2 + x1*x0)*x2)*y0)*y1^2 - (x1^3*x0^2 + (x1^3*x0 + x1^2*x0^2)*x2)*y0 + ((x1^2 + x1*x0)*y0^3 - (x1^3 + 2*x1^2*x0 + x1*x0^2 + (x1^2 + x1*x0)*x2)*y0^2 - (x1^3*x0 + x1^2*x0^2)*x2 + (x1^3*x0 + x1^2*x0^2 + (x1^3 + 2*x1^2*x0 + x1*x0^2)*x2)*y0)*y1 - (x1^2*x0^2*x2 - x1*x0*y0^3 + (x1^2*x0 + x1*x0^2 + x1*x0*x2)*y0^2 + ((x1 + x0 + x2)*y0^2 + x1*x0*x2 - y0^3 - ((x1 + x0)*x2 + x1*x0)*y0)*y1^2 - (x1^2*x0^2 + (x1^2*x0 + x1*x0^2)*x2)*y0 + ((x1 + x0)*y0^3 - ((x1 + x0)*x2 + x1^2 + 2*x1*x0 + x0^2)*y0^2 - (x1^2*x0 + x1*x0^2)*x2 + (x1^2*x0 + x1*x0^2 + (x1^2 + 2*x1*x0 + x0^2)*x2)*y0)*y1)*y2

T2Pempty = x0^3*x2^2*x1 - x0^2*x2*y0^3 + (x0^3*x2 + x0^2*x2^2 + x0^2*x2*x1)*y0^2 + (x0^2*x2*x1 - x0*y0^3 + (x0^2 + x0*x2 + x0*x1)*y0^2 - (x0^2*x2 + (x0^2 + x0*x2)*x1)*y0)*y1^2 - (x0^3*x2^2 + (x0^3*x2 + x0^2*x2^2)*x1)*y0 + ((x0^2 + x0*x2)*y0^3 - (x0^3 + 2*x0^2*x2 + x0*x2^2 + (x0^2 + x0*x2)*x1)*y0^2 - (x0^3*x2 + x0^2*x2^2)*x1 + (x0^3*x2 + x0^2*x2^2 + (x0^3 + 2*x0^2*x2 + x0*x2^2)*x1)*y0)*y1 - (x0^2*x2^2*x1 - x0*x2*y0^3 + (x0^2*x2 + x0*x2^2 + x0*x2*x1)*y0^2 + ((x0 + x2 + x1)*y0^2 + x0*x2*x1 - y0^3 - ((x0 + x2)*x1 + x0*x2)*y0)*y1^2 - (x0^2*x2^2 + (x0^2*x2 + x0*x2^2)*x1)*y0 + ((x0 + x2)*y0^3 - ((x0 + x2)*x1 + x0^2 + 2*x0*x2 + x2^2)*y0^2 - (x0^2*x2 + x0*x2^2)*x1 + (x0^2*x2 + x0*x2^2 + (x0^2 + 2*x0*x2 + x2^2)*x1)*y0)*y1)*y2

T3Pempty = x0^3*x1^2*x3 - x0^2*x1*y0^3 + (x0^3*x1 + x0^2*x1^2 + x0^2*x1*x3)*y0^2 + (x0^2*x1*x3 - x0*y0^3 + (x0^2 + x0*x1 + x0*x3)*y0^2 - (x0^2*x1 + (x0^2 + x0*x1)*x3)*y0)*y1^2 - (x0^3*x1^2 + (x0^3*x1 + x0^2*x1^2)*x3)*y0 + ((x0^2 + x0*x1)*y0^3 - (x0^3 + 2*x0^2*x1 + x0*x1^2 + (x0^2 + x0*x1)*x3)*y0^2 - (x0^3*x1 + x0^2*x1^2)*x3 + (x0^3*x1 + x0^2*x1^2 + (x0^3 + 2*x0^2*x1 + x0*x1^2)*x3)*y0)*y1 - (x0^2*x1^2*x3 - x0*x1*y0^3 + (x0^2*x1 + x0*x1^2 + x0*x1*x3)*y0^2 + ((x0 + x1 + x3)*y0^2 + x0*x1*x3 - y0^3 - ((x0 + x1)*x3 + x0*x1)*y0)*y1^2 - (x0^2*x1^2 + (x0^2*x1 + x0*x1^2)*x3)*y0 + ((x0 + x1)*y0^3 - ((x0 + x1)*x3 + x0^2 + 2*x0*x1 + x1^2)*y0^2 - (x0^2*x1 + x0*x1^2)*x3 + (x0^2*x1 + x0*x1^2 + (x0^2 + 2*x0*x1 + x1^2)*x3)*y0)*y1)*y2

P1 = x0^2*x1^2*x2 - x0*x1*y0^3 + (x0^2*x1 + x0*x1^2 + x0*x1*x2)*y0^2 + ((x0 + x1 + x2)*y0^2 + x0*x1*x2 - y0^3 - ((x0 + x1)*x2 + x0*x1)*y0)*y1^2 - (x0^2*x1^2 + (x0^2*x1 + x0*x1^2)*x2)*y0 + ((x0 + x1)*y0^3 - ((x0 + x1)*x2 + x0^2 + 2*x0*x1 + x1^2)*y0^2 - (x0^2*x1 + x0*x1^2)*x2 + (x0^2*x1 + x0*x1^2 + (x0^2 + 2*x0*x1 + x1^2)*x2)*y0)*y1

P2 = x0^3*x1*x2 - x0^2*y0^3 + (x0^3 + x0^2*x1 + x0^2*x2)*y0^2 - (x0^3*x1 + (x0^3 + x0^2*x1)*x2)*y0 - (x0^2*x1*x2 - x0*y0^3 + (x0^2 + x0*x1 + x0*x2)*y0^2 - (x0^2*x1 + (x0^2 + x0*x1)*x2)*y0)*y1 - (x0^2*x1*x2 - x0*y0^3 + (x0^2 + x0*x1 + x0*x2)*y0^2 - (x0^2*x1 + (x0^2 + x0*x1)*x2)*y0 - ((x0 + x1 + x2)*y0^2 + x0*x1*x2 - y0^3 - ((x0 + x1)*x2 + x0*x1)*y0)*y1)*y2

P3 = x0^3*x1^2 + x0^2*x1*y0^2 + (x0^2*x1 + x0*y0^2 - (x0^2 + x0*x1)*y0)*y1^2 - (x0^3*x1 + x0^2*x1^2)*y0 - (x0^3*x1 + x0^2*x1^2 + (x0^2 + x0*x1)*y0^2 - (x0^3 + 2*x0^2*x1 + x0*x1^2)*y0)*y1 - (x0^2*x1^2 + x0*x1*y0^2 - ((x0 + x1)*y0 - x0*x1 - y0^2)*y1^2 - (x0^2*x1 + x0*x1^2)*y0 - ((x0 + x1)*y0^2 + x0^2*x1 + x0*x1^2 - (x0^2 + 2*x0*x1 + x1^2)*y0)*y1)*y2

##First test: s1s3=s3s1
T3P1 = x0^2*x1^2*x3 - x0*x1*y0^3 + (x0^2*x1 + x0*x1^2 + x0*x1*x3)*y0^2 + ((x0 + x1 + x3)*y0^2 + x0*x1*x3 - y0^3 - ((x0 + x1)*x3 + x0*x1)*y0)*y1^2 - (x0^2*x1^2 + (x0^2*x1 + x0*x1^2)*x3)*y0 + ((x0 + x1)*y0^3 - ((x0 + x1)*x3 + x0^2 + 2*x0*x1 + x1^2)*y0^2 - (x0^2*x1 + x0*x1^2)*x3 + (x0^2*x1 + x0*x1^2 + (x0^2 + 2*x0*x1 + x1^2)*x3)*y0)*y1

T1P3 = x1^3*x0^2 + x1^2*x0*y0^2 + (x1^2*x0 + x1*y0^2 - (x1^2 + x1*x0)*y0)*y1^2 - (x1^3*x0 + x1^2*x0^2)*y0 - (x1^3*x0 + x1^2*x0^2 + (x1^2 + x1*x0)*y0^2 - (x1^3 + 2*x1^2*x0 + x1*x0^2)*y0)*y1 - (x1^2*x0^2 + x1*x0*y0^2 - ((x1 + x0)*y0 - x1*x0 - y0^2)*y1^2 - (x1^2*x0 + x1*x0^2)*y0 - ((x1 + x0)*y0^2 + x1^2*x0 + x1*x0^2 - (x1^2 + 2*x1*x0 + x0^2)*y0)*y1)*y2

P31 = P1/u23 + T3P1/u32
P13 = P3/u01 + T1P3/u10

P31 = x0^2*x1^2 + x0*x1*y0^2 - ((x0 + x1)*y0 - x0*x1 - y0^2)*y1^2 - (x0^2*x1 + x0*x1^2)*y0 - ((x0 + x1)*y0^2 + x0^2*x1 + x0*x1^2 - (x0^2 + 2*x0*x1 + x1^2)*y0)*y1
P13 = x0^2*x1^2 + x0*x1*y0^2 - ((x0 + x1)*y0 - x0*x1 - y0^2)*y1^2 - (x0^2*x1 + x0*x1^2)*y0 - ((x0 + x1)*y0^2 + x0^2*x1 + x0*x1^2 - (x0^2 + 2*x0*x1 + x1^2)*y0)*y1
